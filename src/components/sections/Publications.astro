---
import Section from "@/components/Section.astro";
import { getPublications } from "@/utils/db/getPublications";
import { useTranslations } from "@/i18n/utils";

const { user, lang } = Astro.props;

const { isValid, data = {} } = await getPublications({
  user,
  languageCode: lang,
});
const publications = isValid ? data?.publications : [];

const hasPublications = publications.length > 0;

const t = useTranslations(lang);

function formatDateToMonthYear(dateString) {
  const options = { year: "numeric", month: "long" };
  return new Date(dateString).toLocaleDateString("es-ES", options);
}
---

{
  hasPublications && (
    <Section title={t("publications.title")}>
      <ul class="gap-2">
        {publications.map(({ name, publisher, releaseDate, summary, url }) => {
          return (
            <li>
              <article>
                <header>
                  <div>
                    <h3>
                      <a href={url} title={`Ver ${name}`} target="_blank">
                        {name}
                      </a>
                    </h3>
                    <h4>{publisher.name}</h4>
                  </div>

                  <div>
                    <time datetime={releaseDate} data-title={releaseDate}>
                      {formatDateToMonthYear(releaseDate)}
                    </time>
                  </div>
                </header>

                <footer>
                  <p>{summary}</p>
                </footer>
              </article>
            </li>
          );
        })}
      </ul>
    </Section>
  )
}

<style>
  ul {
    display: flex;
    flex-direction: column;
  }

  article h3 {
    font-weight: 500;
    color: #111;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: #555;
    font-size: 0.85rem;
    min-width: 102px;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>
