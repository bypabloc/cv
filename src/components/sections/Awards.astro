---
import Section from "@/components/Section.astro";

import { getAwards } from "@/utils/db/getAwards";
import { useTranslations } from "@/i18n/utils";
import { formatDateToMonthYear } from "@/utils/formatDateToMonthYear";

const { user, lang } = Astro.props;

const { isValid, data = {} } = await getAwards({ user, languageCode: lang });
const awards = isValid ? data?.awards : [];

const hasAwards = awards.length > 0;

const t = useTranslations(lang);
---

{
  hasAwards && (
    <Section title={t("awards.title")}>
      <ul>
        {awards.map(({ title, date, awarder, summary, url }) => (
          <li>
            <article>
              <header>
                <div>
                  <h3>
                    <a href={url} title={`Ver ${title}`} target="_blank">
                      {title}
                    </a>
                  </h3>
                  <h4>{awarder}</h4>
                </div>
                <div>
                  <time datetime={date} data-title={date}>
                    {formatDateToMonthYear(date)}
                  </time>
                </div>
              </header>
              <footer>
                <p>{summary}</p>
              </footer>
            </article>
          </li>
        ))}
      </ul>
    </Section>
  )
}

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 500;
    color: #111;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: #555;
    font-size: 0.85rem;
    min-width: 102px;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>
