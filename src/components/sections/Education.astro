---
import Section from "../Section.astro";
import { getEducations } from "@/utils/db/getEducations";

const { user, lang } = Astro.props;

const { isValid, data = {} } = await getEducations({
  user,
  languageCode: lang,
});
const educations = isValid ? data?.educations : [];
---

<Section title="EducaciÃ³n">
  <ul>
    {
      educations.map(({ institution, startDate, endDate, area, learn }) => {
        const startYear = new Date(startDate).getFullYear();
        const endYear =
          endDate != null ? new Date(endDate).getFullYear() : "Actual";
        const years = `${startYear} - ${endYear}`;

        return (
          <li>
            <article>
              <header>
                <div>
                  <h3>
                    <a
                      href={institution.url}
                      title={`Ver ${institution.name}`}
                      target="_blank"
                    >
                      {institution.name}
                    </a>
                  </h3>
                </div>

                <div>
                  <time datetime={startDate} data-title={startDate}>
                    {startYear}
                  </time>
                  {" - "}
                  <time datetime={endDate} data-title={endDate}>
                    {endYear}
                  </time>
                </div>
              </header>

              <footer>
                <p>{area}</p>
                <p>{learn}</p>
              </footer>
            </article>
          </li>
        );
      })
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  article h3 {
    font-weight: 500;
    color: #111;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    color: #555;
    font-size: 0.85rem;
    min-width: 102px;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>
