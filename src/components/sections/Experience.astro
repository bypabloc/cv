---
import Section from "@/components/Section.astro";
import Skill from "@/components/ui/Skill/Index.vue";
import { getWorks } from "@/utils/db/getWorks";

const { user } = Astro.props;

const { isValid, data = {} } = await getWorks(user);
const works = isValid ? data?.works : [];
---

<Section title="Experiencia laboral">
  <ul>
    {
      Object.values(works).map((work) => (
        <li key={work.id}>
          <article>
            <header>
              <div>
                <h3>
                  {work?.employer ? (
                    <a
                      href={work.employer.url}
                      title={`Ver ${work.employer.name}`}
                      target="_blank"
                    >
                      {work.employer.name}
                    </a>
                  ) : (
                    <span>{work.name}</span>
                  )}
                </h3>
                <h4>{work.position}</h4>
              </div>
              <div>
                <time
                  datetime={work.startDate}
                  data-title={new Date(work.startDate).toLocaleDateString()}
                >
                  {new Date(work.startDate).getFullYear()}
                </time>
                {" - "}
                <time
                  datetime={work.endDate}
                  data-title={
                    work.endDate
                      ? new Date(work.endDate).toLocaleDateString()
                      : "Actual"
                  }
                >
                  {work.endDate
                    ? new Date(work.endDate).getFullYear()
                    : "Actual"}
                </time>
              </div>
            </header>

            <footer class="flex column gap-4">
              {work.summary && (
                <div class="flex column gap-2">
                  <p>
                    <strong>Resumen:</strong> {work.summary}
                  </p>
                </div>
              )}

              {work.responsibilitiesNProjects.length > 0 && (
                <div class="flex column gap-2">
                  <h4>Responsabilidades y proyectos</h4>
                  {work.responsibilitiesNProjects.map((responsibility) => (
                    <p key={responsibility}>• {responsibility}</p>
                  ))}
                </div>
              )}

              {work.achievements.length > 0 && (
                <div class="flex column gap-2">
                  <h4>Logros</h4>
                  {work.achievements.map((achievement) => (
                    <p key={achievement}>• {achievement}</p>
                  ))}
                </div>
              )}

              <Skill
                title="Habilidades técnicas"
                items={work.technicalSkills}
                client:visible
              />

              <Skill
                title="Habilidades blandas"
                items={work.softSkills}
                client:visible
              />
            </footer>
          </article>
        </li>
      ))
    }
  </ul>
</Section>

<style>
  ul {
    display: flex;
    flex-direction: column;
    gap: 32px;
  }

  footer {
    display: flex;
    flex-wrap: wrap;
    gap: 4px;
  }

  footer span {
    border-radius: 6px;
    background: #eee;
    color: #444;
    font-size: 0.6rem;
    font-weight: 500;
    padding: 0.2rem 0.6rem;
  }

  .soft-skills {
    list-style-type: none;
    padding: 0;
  }

  .soft-skills li {
    background: #f9f9f9;
    border: 1px solid #e0e0e0;
    padding: 10px;
    border-radius: 4px;
  }

  .soft-skills p {
    margin: 0;
    font-weight: 500;
    color: #333;
  }

  article h3 {
    font-weight: 700;
    color: #111;
    margin: 0;
  }

  article h4 {
    color: #666;
    margin: 0;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  a {
    display: inline-block;
    text-decoration: none;
    color: inherit;
  }

  a:hover {
    text-decoration: underline;
  }

  time {
    color: #555;
    font-size: 0.85rem;
    min-width: 102px;
  }

  .flex {
    display: flex;
  }

  .flex.column {
    flex-direction: column;
  }

  @media (max-width: 700px) {
    time {
      text-align: right;
    }
  }
</style>
