---
import Section from "@/components/Section.astro";
import { getCertificates } from "@/utils/db/getCertificates";
import { useTranslations } from "@/i18n/utils";
import { formatDateToMonthYear } from "@/utils/formatDateToMonthYear";

const { user, lang } = Astro.props;

const { isValid, data = {} } = await getCertificates({ user });
const certificates = isValid ? data?.certificates : [];

const hasCertificates = certificates.length > 0;

const t = useTranslations(lang);
---

{
  hasCertificates && (
    <Section title={t("certifications.title")}>
      <div class="d-flex flex-direction-column gap-8">
        {certificates.map(({ date, url, issuer, name, title }) => {
          return (
            <div>
              <article class="nyx-color2-text-primary-on">
                <header>
                  <div>
                    <h3 class="nyx-color2-text-primary-base">
                      <a href={url} title={`Ver ${name}`} target="_blank">
                        {title}
                      </a>
                    </h3>
                  </div>

                  <div>
                    <time datetime={date} data-title={date}>
                      {formatDateToMonthYear(date)}
                    </time>
                  </div>
                </header>

                <footer>
                  <p>{issuer.name}</p>
                </footer>
              </article>
            </div>
          );
        })}
      </div>
    </Section>
  )
}

<style>
  ul {
    display: flex;
    flex-direction: column;
  }

  article h3 {
    font-weight: 500;
  }

  header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 4px;
  }

  time {
    font-size: 0.85rem;
    min-width: 102px;
  }

  @media (width <= 700px) {
    time {
      text-align: right;
    }
  }
</style>
